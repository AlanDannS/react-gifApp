{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","handleInputChange","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFechGifs","toUpperCase","GifExpertApp","categories","categoria","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACQ,sBAAMC,SAVO,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAKV,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAP,GAAC,OAlBD,SAAAA,GACtBF,EAAcE,EAAEQ,OAAOF,OAiBIG,CAAkBT,IACjCU,YAAY,c,+BC1BnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAClDH,GAFe,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KACFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCWLO,EATM,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC9B,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoBDO,EArBE,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACf,ECHuB,SAAAA,GACvB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDZiBK,CAAY1B,GAA7BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACI,gCACI,6BAAKpB,EAAS2B,gBACbP,GAAW,4CACZ,oBAAIJ,UAAU,UAAd,SAEQT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEYlBiB,EAxBM,WAGjB,MAAmC5C,mBAAS,CAAC,kBAA7C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWpB,KAAI,SAAAqB,GACX,OAAO,cAAC,EAAD,CAEP9B,SAAU8B,GADLA,Y,MCZ7BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c4011447.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n    \n      if(inputValue.trim().length > 2){\n        setCategories((cat) => [inputValue, ...cat] );\n        setInputValue('')\n      }\n    };\n\n    return (\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={e => handleInputChange(e)}\n                    placeholder=\"Buscar\"\n                />\n            </form>\n    );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n        category\n    )}&limit=10&api_key=yu0vLjaOlPlleWq0SOK7qeL3bWXPJELc`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifts = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n    return gifts;\n};\n","import React from 'react'\n\nconst GiftGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GiftGridItem\n","import React from 'react'\nimport { useFechGifs } from '../hooks/useFetchGifs';\n//import { getGifs } from '../helpers/getGifts';\nimport GiftGridItem from './GiftGridItem';\n\nconst GiftGrid = ({category}) => {\n    const {data, loading} = useFechGifs(category);\n\n    return (\n        <div>\n            <h3>{category.toUpperCase()}</h3>\n            {loading && <p>Cargando...</p>}\n            <ol className=\"content\">\n                {\n                    data.map( img => (\n                        <GiftGridItem \n                        key={img.id} \n                        {...img}\n                        />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default GiftGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifts\";\n\nexport const useFechGifs = category => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false,\n                });\n        });\n    }, [category]);\n\n    return state;\n};\n","import React, {useState} from 'react'\nimport AddCategory from './AddCategory';\nimport GiftGrid from './GiftGrid';\n\nconst GifExpertApp = () => {\n\n    //const categories = ['One Punch Man', 'Samurai X', 'Dragon Ball']\n    const [categories, setCategories]= useState(['One Punch Man'])\n \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            <ol>\n                {\n                    categories.map(categoria => {\n                        return <GiftGrid \n                        key={categoria} \n                        category={categoria} />\n                    })\n                }\n            </ol>\n        \n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './Styles/index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}